[{"F:\\react\\merchhub\\src\\index.js":"1","F:\\react\\merchhub\\src\\Routes.js":"2","F:\\react\\merchhub\\src\\core\\Home.js":"3","F:\\react\\merchhub\\src\\core\\Tshirt.js":"4","F:\\react\\merchhub\\src\\core\\MobileCover.js":"5","F:\\react\\merchhub\\src\\core\\NotFoundPage.js":"6","F:\\react\\merchhub\\src\\core\\TshirtCard.js":"7","F:\\react\\merchhub\\src\\core\\Base.js":"8","F:\\react\\merchhub\\src\\tshirt\\tshirtAPI.js":"9","F:\\react\\merchhub\\src\\mobileCover\\mobileCoverAPI.js":"10","F:\\react\\merchhub\\src\\core\\Carousel.js":"11","F:\\react\\merchhub\\src\\core\\MobileCard.js":"12","F:\\react\\merchhub\\src\\core\\SizeGuide.js":"13","F:\\react\\merchhub\\src\\core\\Footer.js":"14","F:\\react\\merchhub\\src\\core\\Models.js":"15","F:\\react\\merchhub\\src\\core\\Menu.js":"16"},{"size":156,"mtime":1609094431249,"results":"17","hashOfConfig":"18"},{"size":742,"mtime":1624453730539,"results":"19","hashOfConfig":"18"},{"size":176,"mtime":1609336174942,"results":"20","hashOfConfig":"18"},{"size":1836,"mtime":1609514379191,"results":"21","hashOfConfig":"18"},{"size":1716,"mtime":1609514641426,"results":"22","hashOfConfig":"18"},{"size":933,"mtime":1624450933438,"results":"23","hashOfConfig":"18"},{"size":4405,"mtime":1610459016555,"results":"24","hashOfConfig":"18"},{"size":233,"mtime":1609501983747,"results":"25","hashOfConfig":"18"},{"size":2186,"mtime":1609349149502,"results":"26","hashOfConfig":"18"},{"size":1636,"mtime":1609514541571,"results":"27","hashOfConfig":"18"},{"size":2893,"mtime":1624451367113,"results":"28","hashOfConfig":"18"},{"size":3300,"mtime":1609319114874,"results":"29","hashOfConfig":"18"},{"size":1959,"mtime":1609523749827,"results":"30","hashOfConfig":"18"},{"size":1332,"mtime":1624454509654,"results":"31","hashOfConfig":"18"},{"size":4281,"mtime":1609319095648,"results":"32","hashOfConfig":"18"},{"size":1827,"mtime":1624454396702,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1c7yj2v",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\react\\merchhub\\src\\index.js",[],["71","72"],"F:\\react\\merchhub\\src\\Routes.js",["73","74","75"],"import React from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Home from './core/Home'\r\nimport Tshirt from './core/Tshirt'\r\nimport MobileCover from './core/MobileCover'\r\nimport NotFoundPage from './core/NotFoundPage'\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path='/' exact component={Home} />\r\n        <Route exact path='/tshirt' exact component={Tshirt} />\r\n        <Route exact path='/mobilecover' exact component={MobileCover} />\r\n        <Route exact path='/404' component={NotFoundPage} />\r\n        <Redirect exact to='/404' />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","F:\\react\\merchhub\\src\\core\\Home.js",[],"F:\\react\\merchhub\\src\\core\\Tshirt.js",[],"F:\\react\\merchhub\\src\\core\\MobileCover.js",[],"F:\\react\\merchhub\\src\\core\\NotFoundPage.js",[],"F:\\react\\merchhub\\src\\core\\TshirtCard.js",["76","77"],"import React, { useState } from 'react'\r\nimport LazyLoad from 'react-lazyload'\r\nimport SizeGuide from './SizeGuide'\r\n\r\nconst TshirtCard = ({ img, name, creater, mrp, price, itemNumber }) => {\r\n  const [size, setSize] = useState('')\r\n  const handleselect = (e) => {\r\n    setSize(e.target.value)\r\n  }\r\n\r\n  const [qtys, setQtys] = useState('')\r\n  const handleqty = (e) => {\r\n    setQtys(e.target.value)\r\n  }\r\n\r\n  const msg = `Hello! I want to purchase *${name} T-shirt* of size *${size}* for *${qtys} Quantity*, model number is *${itemNumber}*`\r\n  const link = `https://wa.me/+918982893136?text=${msg}`\r\n\r\n  const Size = ['Size', 'XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXXL']\r\n\r\n  const Qty = ['Qty', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\r\n\r\n  const monthNames = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n  ]\r\n\r\n  const dayName = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf())\r\n    date.setDate(date.getDate() + days)\r\n    return date\r\n  }\r\n\r\n  var fullDate = new Date()\r\n\r\n  const delveryDate = fullDate.addDays(10)\r\n  const date = delveryDate.getDate()\r\n  const month = delveryDate.getMonth()\r\n  const day = delveryDate.getDay()\r\n\r\n  return (\r\n    <div>\r\n      <div className='card block'>\r\n        <div className='product-img'>\r\n          <LazyLoad>\r\n            <img src={img} className='card-img' alt='' />\r\n          </LazyLoad>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='product-text'>\r\n            <h1 style={{ fontSize: '28px' }}>{name}</h1>\r\n            <h2>By {creater}</h2>\r\n            <p>Select Size for Tshirt</p>\r\n            <div>\r\n              <select className='select' value={size} onChange={handleselect}>\r\n                {/* {options.map((option) =>\r\n                  option.size.map((opt) => <option value={opt}>{opt}</option>)\r\n                )} */}\r\n                {Size.map((opt) => (\r\n                  <option value={opt}>{opt}</option>\r\n                ))}\r\n              </select>\r\n              <span>\r\n                <select className='select' value={qtys} onChange={handleqty}>\r\n                  {Qty.map((qty) => (\r\n                    <option value={qty}>{qty}</option>\r\n                  ))}\r\n                </select>\r\n                <SizeGuide />\r\n                <a\r\n                  type='button'\r\n                  className='fw-bold'\r\n                  data-toggle='modal'\r\n                  data-target='#exampleModalCenter'\r\n                  style={{\r\n                    textDecoration: 'none',\r\n                    color: '#474747',\r\n                    marginLeft: '40px',\r\n                  }}\r\n                >\r\n                  Size Guide\r\n                </a>\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <p>\r\n                Colors{' '}\r\n                <span>\r\n                  <div\r\n                    style={{\r\n                      height: 'calc(100%)',\r\n                      backgroundColor: 'rgb(97, 108, 194)',\r\n                    }}\r\n                  >\r\n                    d\r\n                  </div>\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className='product-text'>\r\n            <p>\r\n              Delivery By{' '}\r\n              <span className=' fw-bold'>\r\n                {date} {monthNames[month]}, {dayName[day]}\r\n              </span>\r\n              {' | '}\r\n              <span>\r\n                <span className=' fw-bold'>Free</span> Shiping\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className='product-price-btn'>\r\n            <p>\r\n              <span className='mrp'>{mrp}</span>\r\n              {price}\r\n            </p>\r\n            {size && qtys ? (\r\n              <a href={link}>\r\n                <button> Buy</button>\r\n              </a>\r\n            ) : (\r\n              <button\r\n                onClick={() => {\r\n                  alert('Please Select Size and Quantity For Tshirt')\r\n                }}\r\n              >\r\n                Buy\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default TshirtCard\r\n","F:\\react\\merchhub\\src\\core\\Base.js",[],"F:\\react\\merchhub\\src\\tshirt\\tshirtAPI.js",[],"F:\\react\\merchhub\\src\\mobileCover\\mobileCoverAPI.js",[],"F:\\react\\merchhub\\src\\core\\Carousel.js",["78"],"import React from 'react'\r\nimport LazyLoad, { lazyload } from 'react-lazyload'\r\nimport img1 from '../img/slide1.png'\r\nimport img2 from '../img/slide2.png'\r\n\r\nconst Carousel = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        id='carouselExampleCaptions'\r\n        className='carousel slide'\r\n        data-bs-ride='carousel'\r\n      >\r\n        <ol className='carousel-indicators'>\r\n          <li\r\n            data-bs-target='#carouselExampleCaptions'\r\n            data-bs-slide-to='0'\r\n            className='active'\r\n          ></li>\r\n          <li\r\n            data-bs-target='#carouselExampleCaptions'\r\n            data-bs-slide-to='1'\r\n          ></li>\r\n        </ol>\r\n        <div className='carousel-inner'>\r\n          <div className='carousel-item active'>\r\n            <a href='/mobilecover'>\r\n              <LazyLoad>\r\n                <img\r\n                  src={`${img1}`}\r\n                  style={{ height: '550px' }}\r\n                  className='d-block w-100'\r\n                  alt='...'\r\n                />\r\n              </LazyLoad>\r\n              <div className='carousel-caption'>\r\n                <h1>Mobile Covers</h1>\r\n                <p>\r\n                  An Amazing Place To Shop\r\n                  <span className='fw-bold' style={{ color: 'black' }}>\r\n                    Merch.\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </a>\r\n          </div>\r\n\r\n          <div className='carousel-item'>\r\n            <a href='/tshirt'>\r\n              <lazyLoad>\r\n                <img\r\n                  src={`${img2}`}\r\n                  style={{ height: '550px' }}\r\n                  className='d-block w-100'\r\n                  alt='...'\r\n                />\r\n              </lazyLoad>\r\n              <div className='carousel-caption'>\r\n                <h1>Tshirts</h1>\r\n                <p>\r\n                  An Amazing Place To Shop\r\n                  <span className='fw-bold' style={{ color: 'white' }}>\r\n                    Merch.\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <a\r\n          className='carousel-control-prev'\r\n          href='#carouselExampleCaptions'\r\n          role='button'\r\n          data-bs-slide='prev'\r\n        >\r\n          <span\r\n            className='carousel-control-prev-icon'\r\n            aria-hidden='true'\r\n          ></span>\r\n          <span className='visually-hidden'>Previous</span>\r\n        </a>\r\n        <a\r\n          className='carousel-control-next'\r\n          href='#carouselExampleCaptions'\r\n          role='button'\r\n          data-bs-slide='next'\r\n        >\r\n          <span\r\n            className='carousel-control-next-icon'\r\n            aria-hidden='true'\r\n          ></span>\r\n          <span className='visually-hidden'>Next</span>\r\n        </a>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Carousel\r\n","F:\\react\\merchhub\\src\\core\\MobileCard.js",["79","80"],"import React, { useState } from 'react'\r\nimport { options } from './Models'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\n// const options = [\r\n//   {\r\n//     label: 'Select Model',\r\n//     value: 'Select Model',\r\n//   },\r\n//   {\r\n//     label: 'Redmi Note 9',\r\n//     value: 'Redmi Note 9',\r\n//   },\r\n//   {\r\n//     label: 'Redmi Note 9 Pro',\r\n//     value: 'Redmi Note 9 Pro',\r\n//   },\r\n//   {\r\n//     label: 'Redmi Note 9 Pro Max',\r\n//     value: 'Redmi Note 9 Pro Max',\r\n//   },\r\n// ]\r\n\r\nconst MobileCard = ({ img, name, creater, mrp, price, itemNumber }) => {\r\n  const [model, setModel] = useState('')\r\n  const handleselect = (e) => {\r\n    setModel(e.target.value)\r\n  }\r\n\r\n  const msg = `Hello! I want to purchase *${name}* mobile back cover for *${model}*, model number is *${itemNumber}*`\r\n  const link = `https://wa.me/+918982893136?text=${msg}`\r\n\r\n  const monthNames = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n  ]\r\n\r\n  const dayName = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf())\r\n    date.setDate(date.getDate() + days)\r\n    return date\r\n  }\r\n\r\n  var fullDate = new Date()\r\n\r\n  const delveryDate = fullDate.addDays(10)\r\n  const date = delveryDate.getDate()\r\n  const month = delveryDate.getMonth()\r\n  const day = delveryDate.getDay()\r\n\r\n  return (\r\n    <div>\r\n      <div className='card block'>\r\n        <div className='product-img'>\r\n          <LazyLoad>\r\n            <img src={img} className='card-img' alt='' />\r\n          </LazyLoad>\r\n        </div>\r\n        <div className='card-body'>\r\n          <div className='product-text'>\r\n            <h1>{name}</h1>\r\n            <h2>By {creater}</h2>\r\n            <p>Select Your Mobile Model</p>\r\n            <select\r\n              className='form-select select'\r\n              value={model}\r\n              onChange={handleselect}\r\n            >\r\n              {/* {options.map((option) =>\r\n                option.value.map((opt) => <option value={opt}>{opt}</option>)\r\n              )} */}\r\n              {options.map((option) => (\r\n                <option value={option}>{option}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className='product-text'>\r\n            <p>\r\n              Delivery By{' '}\r\n              <span className=' fw-bold'>\r\n                {date} {monthNames[month]}, {dayName[day]}\r\n              </span>\r\n              {' | '}\r\n              <span>Free Shiping</span>\r\n            </p>\r\n          </div>\r\n          <div className='product-price-btn'>\r\n            <p>\r\n              <span className='mrp'>{mrp}</span>\r\n              {price}\r\n            </p>\r\n\r\n            {model ? (\r\n              <a href={link} target='_blank'>\r\n                <button> Buy</button>\r\n              </a>\r\n            ) : (\r\n              <button\r\n                onClick={() => {\r\n                  alert('Please Select Mobile Model')\r\n                }}\r\n              >\r\n                Buy\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MobileCard\r\n","F:\\react\\merchhub\\src\\core\\SizeGuide.js",[],"F:\\react\\merchhub\\src\\core\\Footer.js",["81","82","83","84"],"F:\\react\\merchhub\\src\\core\\Models.js",[],"F:\\react\\merchhub\\src\\core\\Menu.js",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":12,"column":31,"nodeType":"93","endLine":12,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":13,"column":37,"nodeType":"93","endLine":13,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":14,"column":42,"nodeType":"93","endLine":14,"endColumn":47},{"ruleId":"94","severity":1,"message":"95","line":47,"column":3,"nodeType":"96","messageId":"97","endLine":51,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":89,"column":17,"nodeType":"100","endLine":99,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":2,"column":20,"nodeType":"103","messageId":"104","endLine":2,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":57,"column":3,"nodeType":"96","messageId":"97","endLine":61,"endColumn":4},{"ruleId":"105","severity":1,"message":"106","line":113,"column":30,"nodeType":"93","endLine":113,"endColumn":45},{"ruleId":"98","severity":1,"message":"107","line":24,"column":15,"nodeType":"100","endLine":24,"endColumn":27},{"ruleId":"98","severity":1,"message":"107","line":29,"column":15,"nodeType":"100","endLine":29,"endColumn":27},{"ruleId":"98","severity":1,"message":"107","line":34,"column":15,"nodeType":"100","endLine":34,"endColumn":27},{"ruleId":"98","severity":1,"message":"107","line":39,"column":15,"nodeType":"100","endLine":39,"endColumn":27},{"ruleId":"98","severity":1,"message":"107","line":37,"column":9,"nodeType":"100","endLine":43,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":38,"column":16,"nodeType":"110","messageId":"111","endLine":38,"endColumn":36},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'lazyload' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]